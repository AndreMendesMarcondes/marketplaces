from numpy import append
import pandas as pd
import sys, os
import pyodbc
import requests
from requests.models import ContentDecodingError
import csv, json
import time

#server = '192.168.1.15' 
#database = 'PROTHEUS_ZANOTTI_TESTE' 
#username = 'totvs' 
#password = 'totvsip' 
#conn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER='+server+';DATABASE='+database+';UID='+username+';PWD='+ password)
#cursor = conn.cursor()

url = 'http://api.ideris.com.br/Login'
payload= json.dumps({"login_token":"27efe191bb0f077c38fae0fe3970863c9ecee6017c60a79f430e58a598fa52e578f43a64b7fbdc230d5c599207607b3f"})
headers= {"Content-Type": "application/json"}
response = requests.request("POST", url, headers=headers, data=payload)
response= str(response.text)
response= response.replace('"',"",2)
#print(response)

url_produtos= "http://api.ideris.com.br/Produto/"
headers = {
  "Authorization":response,
  "Content-Type": "application/json"
}
caminho= 'C:/Users/Thales.Bartolomeu/Desktop/MKTPLACE/json/produtos.xlsx'
df_produto = pd.read_excel(caminho)
#query_produtos="SELECT TRIM(SB1.B1_COD) AS SKU, TRIM(SB5.B5_ECTITU) AS TITULO, SB5.B5_ECDESCR AS DESCRIÇÃO, CASE WHEN SB1.B1_ZMKTPLC = 'S' THEN 'enable' WHEN SB1.B1_ZMKTPLC = 'N' THEN 'disable' ELSE '' END AS STATUS, ISNULL((SELECT SUM(B2_QATU - B2_RESERVA) - 1 FROM SB2010 WHERE D_E_L_E_T_ = '' AND B2_LOCAL = '01' AND B2_COD = SB1.B1_COD),0) AS SALDO, SB1.B1_CUSTD	AS CUSTO, SB1.B1_PESBRU	AS PESO, SB5.B5_ALTURA AS ALTURA, SB5.B5_LARG AS LARGURA, SB5.B5_COMPR AS COMPRIMENTO, TRIM(SA2.A2_NREDUZ) AS MARCA, TRIM(SB1.B1_CODBAR) AS CODBAR, TRIM(SB1.B1_POSIPI) AS NCM, ZB2.ZB2_CODFAM AS COD_CATEGORIA, ZB2.ZB2_DESFAM AS CATEGORIA, TRIM(SB5.B5_ECIMGFI) AS IMAGEM,'TENSAO' AS COD_SPEC, TRIM(SB1.B1_ZTENSAO) AS SPEC FROM SB1010 SB1 LEFT JOIN SB5010 SB5 ON SB5.D_E_L_E_T_ = '' AND SB5.B5_COD = SB1.B1_COD LEFT JOIN SA2010 SA2 ON SA2.D_E_L_E_T_ = '' AND SA2.A2_COD = SB1.B1_PROC AND SA2.A2_LOJA = SB1.B1_LOJPROC LEFT JOIN ZB2010 ZB2 ON ZB2.D_E_L_E_T_ = '' AND ZB2.ZB2_CODFAM = SB1.B1_ZCODFAM WHERE 1=1 AND SB1.D_E_L_E_T_ = '' AND SUBSTRING(SB1.B1_GRUPO,1,2) = 'MR' AND SB1.B1_ZMKTPLC = 'S'"
#df_produto=pd.read_sql(query_produtos,conn)
atual_lin=0

qtde_linhas = ((df_produto['sku'].count()))
atual_lin=0
limite_linha= 9
thejson2=[]

while(atual_lin<=limite_linha)and((qtde_linhas>=limite_linha)or(qtde_linhas<10)):
  while(atual_lin <= qtde_linhas)and(atual_lin<=limite_linha):
    sku= str(df_produto.iloc[atual_lin, 0])
    name= str(df_produto.iloc[atual_lin, 1])
    description= str(df_produto.iloc[atual_lin,2])
    categoriaML= str(df_produto.iloc[atual_lin,4])
    categoriaIdIderis= str(df_produto.iloc[atual_lin,6])
    subCategoriaIdIderis= str(df_produto.iloc[atual_lin,11])
    marcaIdIderis= str(df_produto.iloc[atual_lin,14])
    departamentoIdIderis=str(df_produto.iloc[atual_lin,8])
    ncmId= str(df_produto.iloc[atual_lin,17])
    produtoOrigemID= str(df_produto.iloc[atual_lin,18])
    modelo= str(df_produto.iloc[atual_lin,19])
    garantia= str(df_produto.iloc[atual_lin,20])
    weight= str(df_produto.iloc[atual_lin,21])
    weight= weight.replace(",",'.')
    length= str(df_produto.iloc[atual_lin,22])
    length= length.replace(",",'.')
    width= str(df_produto.iloc[atual_lin,23])
    width= width.replace(",",'.')
    height= str(df_produto.iloc[atual_lin,24])
    height= height.replace(",",".")
    weight_embalagem= str(df_produto.iloc[atual_lin,25])
    weight_embalagem= weight_embalagem.replace(",",".")
    length_embalagem= str(df_produto.iloc[atual_lin,26])
    length_embalagem= length_embalagem.replace(",",".")
    width_embalagem= str(df_produto.iloc[atual_lin,27])
    width_embalagem= width_embalagem.replace(",",".")
    height_embalagem= str(df_produto.iloc[atual_lin,28])
    height_embalagem= height_embalagem.replace(",",".")
    cest= str(df_produto.iloc[atual_lin,29])
    ean= str(df_produto.iloc[atual_lin,30])
    cost= str(df_produto.iloc[atual_lin,31])
    cost= cost.replace(",",'.')
    preco_venda= str(df_produto.iloc[atual_lin,32])
    stk= str(df_produto.iloc[atual_lin,33])
    urlImagem= str(df_produto.iloc[atual_lin,34])
    
    thejson1 = '{"sku":"'+sku+'","titulo":"'+name+'","descricaoLonga":"'+description+'","categoriaML":"'+categoriaML+'","categoriaIdIderis":'+categoriaIdIderis+',"subCategoriaIdIderis":'+subCategoriaIdIderis+',"marcaIdIderis":'+marcaIdIderis+',"departamentoIdIderis":'+departamentoIdIderis+',"ncmId":'+ncmId+',"produtoOrigemId":'+produtoOrigemID+',"modelo":"'+modelo+'","garantia":"'+garantia+'","peso":"'+weight+'","comprimento":"'+length+'","largura":"'+width+'","altura":"'+height+'","pesoEmbalagem":"'+weight_embalagem+'","comprimentoEmbalagem":"'+length_embalagem+'","larguraEmbalagem":"'+width_embalagem+'","alturaEmbalagem":"'+height_embalagem+'","cest":"'+cest+'","ean":"'+ean+'","valorCusto":"'+cost+'","valorVenda":"'+preco_venda+'","quantidadeEstoquePrincipal":"'+stk+'","Variação":[],"Imagem":[{"urlImagem":"'+urlImagem+'"}]}'

    atual_lin = atual_lin + 1
    #thejson2.append(thejson1)

    thejson2 = str(thejson1)
    print(thejson2)
    #thejson1= thejson1.replace("'",'"')
    payload_produtos = json.loads(thejson2)
    print(payload_produtos)

    response2= requests.request("POST", url_produtos, headers=headers, json=payload_produtos) 
    print(response2.text)
  limite_linha= limite_linha + 10
  time.sleep(60)
